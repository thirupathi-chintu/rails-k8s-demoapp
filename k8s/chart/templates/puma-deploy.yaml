---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "demoapp.puma.name" . }}
  labels:
    app: {{ template "demoapp.name" . }}
    chart: {{ template "demoapp.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    component: puma
spec:
  replicas: {{ .Values.puma.replicas }}
  selector:
    matchLabels:
      app: {{ template "demoapp.name" . }}
      release: {{ .Release.Name }}
      component: puma
  template:
    metadata:
      labels:
        app: {{ template "demoapp.name" . }}
        release: {{ .Release.Name }}
        component: puma
      annotations:
        checksum/rails-env-cm: {{ include (print $.Template.BasePath "/rails-env-cm.yaml") . | sha256sum }}
        checksum/rails-env-secret: {{ include (print $.Template.BasePath "/rails-env-secret.yaml") . | sha256sum }}
    spec:
      restartPolicy: Always
      containers:
        - name: puma
          image: {{ .Values.rails.image.repository }}:{{ .Values.rails.image.tag }}
          imagePullPolicy: IfNotPresent
          command:
            - ./bin/start-puma
          livenessProbe:
            httpGet:
              path: /health_check/full
              port: 3000
            initialDelaySeconds: 30
          readinessProbe:
            httpGet:
              path: /health_check/full
              port: 3000
            initialDelaySeconds: 30
          envFrom:
            - configMapRef:
                name: {{ template "demoapp.rails-env.name" . }}
            - secretRef:
                name: {{ template "demoapp.rails-env.name" . }}
